@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 60 56% 91%;
    --foreground: 240 10% 3.9%;
    --card: 60 56% 91%;
    --card-foreground: 240 10% 3.9%;
    --popover: 60 56% 91%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 82 58% 34%;
    --primary-foreground: 60 30% 98%;
    --secondary: 60 30% 85%;
    --secondary-foreground: 240 10% 3.9%;
    --muted: 60 30% 85%;
    --muted-foreground: 240 10% 3.9%;
    --accent: 37 44% 71%;
    --accent-foreground: 240 10% 3.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 60 30% 98%;
    --border: 60 20% 80%;
    --input: 60 20% 80%;
    --ring: 82 58% 34%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 220 20% 12%;
    --foreground: 60 30% 98%;
    --card: 220 20% 17%;
    --card-foreground: 60 30% 98%;
    --popover: 220 20% 12%;
    --popover-foreground: 60 30% 98%;
    --primary: 82 48% 44%;
    --primary-foreground: 60 30% 98%;
    --secondary: 220 20% 17%;
    --secondary-foreground: 60 30% 98%;
    --muted: 220 20% 22%;
    --muted-foreground: 220 10% 65%;
    --accent: 37 34% 61%;
    --accent-foreground: 240 10% 3.9%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 60 30% 98%;
    --border: 220 20% 25%;
    --input: 220 20% 25%;
    --ring: 82 48% 44%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  /* [RESPONSIVE FIX]: Fluid typography for headings */
  .clamp-text-h1 {
    font-size: clamp(2.25rem, 1.35rem + 4.5vw, 4.5rem); /* 36px to 72px */
  }
  .clamp-text-h2 {
    font-size: clamp(1.875rem, 1.2rem + 3.375vw, 3.75rem); /* 30px to 60px */
  }
  .clamp-text-h3 {
      font-size: clamp(1.5rem, 1rem + 2.5vw, 3rem); /* 24px to 48px */
  }
}

@layer components {
  /* Custom checkbox style */
  .checkbox-btn {
    display: block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Hide the browser's default checkbox */
  .checkbox-btn input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .checkbox-btn .label-text {
    cursor: pointer;
    font-size: 16px; /* Adjusted to match font-code text-base */
    @apply font-code;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    border: 2.5px solid hsl(var(--foreground));
    transition: .2s linear;
  }
  
  .checkbox-btn input:checked ~ .checkmark {
    background-color: transparent;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    visibility: hidden;
    opacity: 0;
    left: 50%;
    top: 40%;
    width: 10px;
    height: 14px;
    border: 2px solid hsl(var(--primary));
    filter: drop-shadow(0px 0px 10px hsl(var(--primary)));
    border-width: 0 2.5px 2.5px 0;
    transition: .2s linear;
    transform: translate(-50%, -50%) rotate(-90deg) scale(0.2);
  }

  /* Show the checkmark when checked */
  .checkbox-btn input:checked ~ .checkmark:after {
    visibility: visible;
    opacity: 1;
    transform: translate(-50%, -50%) rotate(0deg) scale(1);
    animation: pulse 1s ease-in;
  }

  .checkbox-btn input:checked ~ .checkmark {
    transform: rotate(45deg);
    border: none;
  }

  .simple-arrow-button {
    @apply flex items-center gap-2 text-sm font-semibold text-foreground/70 transition-all duration-300;
  }

  .simple-arrow-button:hover {
    @apply text-primary;
  }
  
  .simple-arrow-button > svg {
    @apply transition-transform duration-300;
  }

  .simple-arrow-button:hover > svg {
    @apply translate-x-1;
  }

  /* New Checkbox Switch */
  .checkbox-switch {
    font-size: 17px;
    position: relative;
    display: inline-block;
    width: 3.5em;
    height: 2em;
  }

  /* Hide default HTML checkbox */
  .checkbox-switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* The slider */
  .switch-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: hsl(var(--muted));
    border: 1px solid hsl(var(--muted));
    transition: .4s;
    border-radius: 32px;
    outline: none;
  }

  .dark .switch-slider {
    background-color: hsl(var(--muted-foreground));
    border-color: hsl(var(--muted-foreground));
  }
  
  .switch-slider:before {
    position: absolute;
    content: "";
    height: 2rem;
    width: 2rem;
    border-radius: 50%;
    outline: 2px solid hsl(var(--muted));
    left: -1px;
    bottom: -1px;
    background-color: hsl(var(--background));
    transition: transform .25s ease-in-out 0s;
  }
  
  .dark .switch-slider:before {
    outline-color: hsl(var(--muted-foreground));
    background-color: hsl(var(--card));
  }

  .switch-slider-icon {
    opacity: 0;
    height: 12px;
    width: 12px;
    stroke-width: 8;
    position: absolute;
    z-index: 999;
    stroke: hsl(var(--primary-foreground));
    right: 60%;
    top: 30%;
    transition: right ease-in-out .3s, opacity ease-in-out .15s;
  }
  
  input:checked + .switch-slider {
    background-color: hsl(var(--primary));
  }
  
  .dark input:checked + .switch-slider {
     background-color: hsl(var(--primary));
  }
  
  input:checked + .switch-slider .switch-slider-icon {
    opacity: 1;
    right: 20%;
  }
  
  input:checked + .switch-slider:before {
    transform: translateX(1.5em);
    outline-color: hsl(var(--primary));
  }

  /* 3D layered card effect */
  .layered-card {
    position: relative;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .layered-card-content {
    border-radius: 1.5rem; /* 24px */
    overflow: hidden;
    background: hsl(var(--primary));
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .layered-card-content::before {
    position: absolute;
    content: "";
    top: -4%;
    left: 50%;
    width: 90%;
    height: 90%;
    transform: translate(-50%);
    background: hsl(var(--background) / 0.8);
    z-index: -1;
    transform-origin: bottom;
    border-radius: inherit;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .layered-card-content::after {
    position: absolute;
    content: "";
    top: -8%;
    left: 50%;
    width: 80%;
    height: 80%;
    transform: translate(-50%);
    background: hsl(var(--background) / 0.5);
    z-index: -2;
    transform-origin: bottom;
    border-radius: inherit;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .dark .layered-card-content::before {
    background: hsl(var(--muted) / 0.8);
  }
  .dark .layered-card-content::after {
    background: hsl(var(--muted) / 0.5);
  }

  .layered-card:hover {
    transform: translateY(-16px);
  }

  .layered-card:hover .layered-card-content::before {
    transform: translate(-50%) rotate(-8deg);
    top: 0;
    width: 100%;
    height: 100%;
  }

  .layered-card:hover .layered-card-content::after {
    transform: translate(-50%) rotate(8deg);
    top: 0;
    width: 100%;
    height: 100%;
  }

  /* Color Palette Card */
  .color-palette-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .color-palette {
    height: 120px;
    width: 100%;
    border-radius: 1em;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    font-family: sans-serif;
    border: 1px solid hsl(var(--border));
    margin: 0 auto;
    display: flex;
  }

  .dark .color-palette {
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  }

  .color-palette .palette-color {
    height: 100%;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    letter-spacing: 1px;
    transition: flex 0.2s ease-in-out;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
  }

  .color-palette .palette-color span {
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    writing-mode: vertical-rl;
    text-orientation: mixed;
    transform: rotate(180deg);
  }

  .color-palette .palette-color:hover {
    flex: 3;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 8px 24px;
  }

  .color-palette .palette-color:hover span {
    opacity: 1;
  }

  /* Social Follow Section */
  .social-follow-card {
    width: fit-content;
    height: fit-content;
    background-color: hsl(var(--card));
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 25px 25px;
    gap: 20px;
    border-radius: 0.5rem;
  }

  .social-container {
    width: 52px;
    height: 52px;
    border-radius: 0.5rem;
    background-color: hsl(var(--primary-foreground) / 0.1);
    border: 1px solid hsl(var(--border));
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    transition-duration: .3s;
  }

  .dark .social-container {
    background-color: hsl(var(--primary-foreground) / 0.1);
    border-color: hsl(var(--border) / 0.2);
  }

  .social-container.instagram:hover {
    background-color: #d62976;
    border-color: #d62976;
  }
  .social-container.pinterest:hover {
    background-color: #E60023;
    border-color: #E60023;
  }
  .social-container.facebook:hover {
    background-color: #1877F2;
    border-color: #1877F2;
  }
  .social-container.tiktok:hover {
    background-color: #000000;
    border-color: #000000;
  }

  .social-container:active {
    transform: scale(0.9);
    transition-duration: .3s;
  }

  .social-svg {
    width: 20px;
    height: 20px;
    stroke: hsl(var(--foreground));
  }
  
  .social-svg path,
  .social-svg circle {
    fill: hsl(var(--foreground));
  }

  .social-container:hover .social-svg path,
  .social-container:hover .social-svg circle {
    fill: #fff;
  }
  .social-container:hover .social-svg {
    stroke: #fff;
    animation: slide-in-top 0.3s both;
  }

  /* Author Card Book Effect */
  .book-container {
    display: flex;
    justify-content: center;
    align-items: center;
    perspective: 2000px;
  }
  
  .book {
    width: 220px;
    height: 300px;
    position: relative;
    transform-style: preserve-3d;
    background-color: hsl(var(--card));
    box-shadow: 1px 1px 12px rgba(0,0,0,0.1);
    border-radius: 10px;
    color: hsl(var(--card-foreground));
  }

  .dark .book {
     box-shadow: 1px 1px 12px rgba(0,0,0,0.5);
  }
  
  .cover {
    top: 0;
    left: 0;
    position: absolute;
    background-color: hsl(var(--muted));
    width: 100%;
    height: 100%;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.5s;
    transform-origin: 0;
    box-shadow: 1px 1px 12px rgba(0,0,0,0.2);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .book:hover .cover {
    transition: all 0.5s;
    transform: rotateY(-85deg);
  }

  .book-content {
    font-size: 20px;
    font-weight: bolder;
  }
}

@layer utilities {
  .retro-input {
    @apply font-code bg-white text-black border-2 border-black rounded-none transition-all duration-300;
    box-shadow: 5px 5px 0 #000;
  }

  .dark .retro-input {
    @apply bg-gray-900 text-white border-gray-400;
    box-shadow: 5px 5px 0 #2d3748;
  }

  .retro-input:hover {
    transform: translate(-2px, -2px);
    box-shadow: 7px 7px 0 #000;
  }
  
  .dark .retro-input:hover {
    box-shadow: 7px 7px 0 #2d3748;
  }
  
  .retro-input:focus {
    @apply outline-none ring-0;
    animation: shake 0.3s ease-in-out;
  }
  
  .retro-input::placeholder {
    @apply text-muted-foreground;
  }
  
  @keyframes animated-gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .animated-gradient-text {
    background: linear-gradient(
      -45deg,
      hsl(var(--primary)),
      hsl(var(--foreground)),
      hsl(var(--accent)),
      hsl(var(--primary))
    );
    background-size: 300% 300%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: animated-gradient 8s ease-in-out infinite;
  }

}

/* Cube Loader */
.wrapper-grid {
  --animation-duration: 4.8s;
  --cube-color: #0000;
  --highlight-color: hsl(var(--primary));
  --cube-width: 64px;
  --cube-height: 64px;
  --font-size: 2.2em;
  position: relative;
  inset: 0;
  display: grid;
  grid-template-columns: repeat(8, var(--cube-width));
  grid-template-rows: auto;
  grid-gap: 0;
  width: calc(8 * var(--cube-width));
  height: var(--cube-height);
  perspective: 350px;
  font-family: "Poppins", sans-serif;
  font-size: var(--font-size);
  font-weight: 800;
  color: transparent;
}
.cube {
  position: relative;
  transform-style: preserve-3d;
}
.face {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--cube-width);
  height: var(--cube-height);
  background-color: var(--cube-color);
}
.face-left, .face-right, .face-back, .face-front {
  box-shadow: inset 0 0 2px 1px #0001, inset 0 0 12px 1px #fff1;
}
.dark .face-left, .dark .face-right, .dark .face-back, .dark .face-front {
  box-shadow: inset 0 0 1px 0px #fff4, inset 0 0 4px 0px #fff4;
}
.face-front {
  transform: rotateY(0deg) translateZ(calc(var(--cube-width) / 2));
}
.face-back {
  transform: rotateY(180deg) translateZ(calc(var(--cube-width) / 2));
  opacity: 0.6;
}
.face-left {
  transform: rotateY(-90deg) translateZ(calc(var(--cube-width) / 2));
  opacity: 0.6;
}
.face-right {
  transform: rotateY(90deg) translateZ(calc(var(--cube-width) / 2));
  opacity: 0.6;
}
.face-top {
  height: var(--cube-width);
  transform: rotateX(90deg) translateZ(calc(var(--cube-width) / 2));
  opacity: 0.8;
}
.face-bottom {
  height: var(--cube-width);
  transform: rotateX(-90deg) translateZ(calc(var(--cube-height) - var(--cube-width) * 0.5));
  opacity: 0.8;
}
.cube:nth-child(1) { z-index: 0; animation-delay: 0s; }
.cube:nth-child(2) { z-index: 1; animation-delay: 0.2s; }
.cube:nth-child(3) { z-index: 2; animation-delay: 0.4s; }
.cube:nth-child(4) { z-index: 3; animation-delay: 0.6s; }
.cube:nth-child(5) { z-index: 3; animation-delay: 0.8s; }
.cube:nth-child(6) { z-index: 2; animation-delay: 1s; }
.cube:nth-child(7) { z-index: 1; animation-delay: 1.2s; }
.cube:nth-child(8) { z-index: 0; animation-delay: 1.4s; }

.cube {
  animation: translate-z var(--animation-duration) ease-in-out infinite;
}
.cube .face {
  animation: face-color var(--animation-duration) ease-in-out infinite, edge-glow var(--animation-duration) ease-in-out infinite;
  animation-delay: inherit;
}
.cube .face.face-front {
  animation: face-color var(--animation-duration) ease-in-out infinite, face-glow var(--animation-duration) ease-in-out infinite, edge-glow var(--animation-duration) ease-in-out infinite;
  animation-delay: inherit;
}
@keyframes translate-z {
  0%, 40%, 100% {
    transform: translateZ(-2px);
  }
  30% {
    transform: translateZ(16px) translateY(-1px);
  }
}
@keyframes face-color {
  0%, 50%, 100% {
    background-color: var(--cube-color);
  }
  30% {
    background-color: var(--highlight-color);
  }
}
@keyframes face-glow {
  0%, 50%, 100% {
    color: #fff0;
    filter: none;
  }
  30% {
    color: hsl(var(--foreground));
    filter: drop-shadow(0 14px 10px var(--highlight-color));
  }
}
@keyframes edge-glow {
  0%, 40%, 100% {
    box-shadow: inset 0 0 2px 1px #0001, inset 0 0 12px 1px #fff1;
  }
  .dark & {
    box-shadow: inset 0 0 1px 0px #fff4, inset 0 0 4px 0px #fff4;
  }
  30% {
    box-shadow: 0 0 2px 0px var(--highlight-color);
  }
}


@keyframes pulse {
  0%,
  100% {
    transform: translate(-50%, -50%) rotate(0deg) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) rotate(0deg) scale(1.6);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-3px) rotate(-1deg); }
  50% { transform: translateX(3px) rotate(1deg); }
  75% { transform: translateX(-3px) rotate(-1deg); }
}

/* Floating icons animation */
@keyframes float {
  0% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(5deg);
  }
  100% {
    transform: translateY(0px) rotate(0deg);
  }
}

.icon-float {
  animation: float linear infinite;
}

/* Glassmorphism Gallery Card */
.gallery-item-card {
  box-sizing: border-box;
  width: 250px;
  height: 320px;
  background: rgba(217, 217, 217, 0.58);
  border: 1px solid white;
  box-shadow: 12px 17px 51px rgba(0, 0, 0, 0.22);
  backdrop-filter: blur(6px);
  border-radius: 17px;
  text-align: center;
  cursor: pointer;
  transition: all 0.5s;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  font-weight: bolder;
  color: black;
  position: relative;
  overflow: hidden;
}

.gallery-item-card:hover {
  border: 1px solid black;
  transform: scale(1.05);
}

.gallery-item-card:active {
  transform: scale(0.95) rotateZ(1.7deg);
}

.gallery-item-card .gallery-item-overlay {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.5);
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: all 0.5s;
  padding: 1rem;
}

.gallery-item-card:hover .gallery-item-overlay {
  opacity: 1;
}

.gallery-item-card:hover img {
  filter: blur(4px);
  transform: scale(1.1);
}


@keyframes slide-in-top {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
